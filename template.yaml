AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  tagesdashboard-sam

  SAM Template for tagesdashboard-sam

Globals:
  Function:
    Timeout: 3
    MemorySize: 128

Parameters:
  AWSENVNAME:
    Type: String
    Description: AWS Env where SAM is being executed (AWS_SAM_LOCAL or AWS)
    Default: 'AWS'
  STAGENAME:
    Type: String
    Description:  The Stage Name for the API
    Default: 'Sandbox'
  CognitoUserPoolId:
    Type: String
    Description:  The ARN of the Cognito User Pool to use for authenticating against APIs
    Default: '{{resolve:ssm:/Tagesdashboard/CogntioUserPool:1}}'
  CognitoClientId:
    Type: String
    Description:  The Client ID for use of the Cognito User Pool for authenticating against APIs
    Default: '{{resolve:ssm:/Tagesdashboard/CogntioClientId:1}}'

Resources:

  Databases:
    Type: AWS::Serverless::Application
    Properties:
      Location: './samtemplates/databases/database-template.yaml'

  Apis:
    Type:  AWS::Serverless::Application
    Properties:
      Location: './samtemplates/apis/api-template.yaml'
      Parameters:
        AWSENVNAME: !Ref AWSENVNAME
        CognitoUserPoolId: !Ref CognitoUserPoolId
        CognitoClientId: !Ref CognitoClientId
        TasksTableName: !GetAtt Databases.Outputs.TasksTableName

Outputs:
  GetTasksApi:
    Description: "API Gateway endpoint URL for Prod stage for Get Tasks function"
    Value: !Sub 
      - "https://${RestApi}.execute-api.${AWS::Region}.amazonaws.com/${ApiStage}/tasks/"
      - RestApi: !GetAtt Apis.Outputs.GetTasksApi
        ApiStage: !Ref STAGENAME
  GetTasksFunction:
    Description: "Get Tasks Lambda Function ARN"
    Value: !GetAtt Apis.Outputs.GetTasksFunction
  GetTasksFunctionIamRole:
    Description: "Implicit IAM Role created for Get Tasks function"
    Value: !GetAtt Apis.Outputs.GetTasksFunctionRole
